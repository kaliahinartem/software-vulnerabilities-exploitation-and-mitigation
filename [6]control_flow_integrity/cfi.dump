
cfi:     file format elf64-x86-64


Disassembly of section .init:

0000000000400370 <_init>:
  400370:	48 83 ec 08          	sub    $0x8,%rsp
  400374:	48 8b 05 7d 0c 20 00 	mov    0x200c7d(%rip),%rax        # 600ff8 <__gmon_start__>
  40037b:	48 85 c0             	test   %rax,%rax
  40037e:	74 02                	je     400382 <_init+0x12>
  400380:	ff d0                	callq  *%rax
  400382:	48 83 c4 08          	add    $0x8,%rsp
  400386:	c3                   	retq   

Disassembly of section .text:

0000000000400390 <_start>:
  400390:	31 ed                	xor    %ebp,%ebp
  400392:	49 89 d1             	mov    %rdx,%r9
  400395:	5e                   	pop    %rsi
  400396:	48 89 e2             	mov    %rsp,%rdx
  400399:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40039d:	50                   	push   %rax
  40039e:	54                   	push   %rsp
  40039f:	49 c7 c0 50 06 40 00 	mov    $0x400650,%r8
  4003a6:	48 c7 c1 e0 05 40 00 	mov    $0x4005e0,%rcx
  4003ad:	48 c7 c7 90 05 40 00 	mov    $0x400590,%rdi
  4003b4:	ff 15 36 0c 20 00    	callq  *0x200c36(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  4003ba:	f4                   	hlt    
  4003bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004003c0 <_dl_relocate_static_pie>:
  4003c0:	f3 c3                	repz retq 
  4003c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4003c9:	00 00 00 
  4003cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003d0 <deregister_tm_clones>:
  4003d0:	55                   	push   %rbp
  4003d1:	b8 28 10 60 00       	mov    $0x601028,%eax
  4003d6:	48 3d 28 10 60 00    	cmp    $0x601028,%rax
  4003dc:	48 89 e5             	mov    %rsp,%rbp
  4003df:	74 17                	je     4003f8 <deregister_tm_clones+0x28>
  4003e1:	b8 00 00 00 00       	mov    $0x0,%eax
  4003e6:	48 85 c0             	test   %rax,%rax
  4003e9:	74 0d                	je     4003f8 <deregister_tm_clones+0x28>
  4003eb:	5d                   	pop    %rbp
  4003ec:	bf 28 10 60 00       	mov    $0x601028,%edi
  4003f1:	ff e0                	jmpq   *%rax
  4003f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4003f8:	5d                   	pop    %rbp
  4003f9:	c3                   	retq   
  4003fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400400 <register_tm_clones>:
  400400:	be 28 10 60 00       	mov    $0x601028,%esi
  400405:	55                   	push   %rbp
  400406:	48 81 ee 28 10 60 00 	sub    $0x601028,%rsi
  40040d:	48 89 e5             	mov    %rsp,%rbp
  400410:	48 c1 fe 03          	sar    $0x3,%rsi
  400414:	48 89 f0             	mov    %rsi,%rax
  400417:	48 c1 e8 3f          	shr    $0x3f,%rax
  40041b:	48 01 c6             	add    %rax,%rsi
  40041e:	48 d1 fe             	sar    %rsi
  400421:	74 15                	je     400438 <register_tm_clones+0x38>
  400423:	b8 00 00 00 00       	mov    $0x0,%eax
  400428:	48 85 c0             	test   %rax,%rax
  40042b:	74 0b                	je     400438 <register_tm_clones+0x38>
  40042d:	5d                   	pop    %rbp
  40042e:	bf 28 10 60 00       	mov    $0x601028,%edi
  400433:	ff e0                	jmpq   *%rax
  400435:	0f 1f 00             	nopl   (%rax)
  400438:	5d                   	pop    %rbp
  400439:	c3                   	retq   
  40043a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400440 <__do_global_dtors_aux>:
  400440:	80 3d e1 0b 20 00 00 	cmpb   $0x0,0x200be1(%rip)        # 601028 <__TMC_END__>
  400447:	75 17                	jne    400460 <__do_global_dtors_aux+0x20>
  400449:	55                   	push   %rbp
  40044a:	48 89 e5             	mov    %rsp,%rbp
  40044d:	e8 7e ff ff ff       	callq  4003d0 <deregister_tm_clones>
  400452:	c6 05 cf 0b 20 00 01 	movb   $0x1,0x200bcf(%rip)        # 601028 <__TMC_END__>
  400459:	5d                   	pop    %rbp
  40045a:	c3                   	retq   
  40045b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400460:	f3 c3                	repz retq 
  400462:	0f 1f 40 00          	nopl   0x0(%rax)
  400466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40046d:	00 00 00 

0000000000400470 <frame_dummy>:
  400470:	55                   	push   %rbp
  400471:	48 89 e5             	mov    %rsp,%rbp
  400474:	5d                   	pop    %rbp
  400475:	eb 89                	jmp    400400 <register_tm_clones>
  400477:	90                   	nop
  400478:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40047f:	00 

0000000000400480 <lt.cfi>:
  400480:	55                   	push   %rbp
  400481:	48 89 e5             	mov    %rsp,%rbp
  400484:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400487:	89 75 f8             	mov    %esi,-0x8(%rbp)
  40048a:	8b 75 fc             	mov    -0x4(%rbp),%esi
  40048d:	3b 75 f8             	cmp    -0x8(%rbp),%esi
  400490:	0f 9c c0             	setl   %al
  400493:	24 01                	and    $0x1,%al
  400495:	0f b6 c0             	movzbl %al,%eax
  400498:	5d                   	pop    %rbp
  400499:	c3                   	retq   
  40049a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004a0 <gt.cfi>:
  4004a0:	55                   	push   %rbp
  4004a1:	48 89 e5             	mov    %rsp,%rbp
  4004a4:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4004a7:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4004aa:	8b 75 fc             	mov    -0x4(%rbp),%esi
  4004ad:	3b 75 f8             	cmp    -0x8(%rbp),%esi
  4004b0:	0f 9f c0             	setg   %al
  4004b3:	24 01                	and    $0x1,%al
  4004b5:	0f b6 c0             	movzbl %al,%eax
  4004b8:	5d                   	pop    %rbp
  4004b9:	c3                   	retq   
  4004ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004c0 <sort>:
  4004c0:	55                   	push   %rbp
  4004c1:	48 89 e5             	mov    %rsp,%rbp
  4004c4:	48 83 ec 30          	sub    $0x30,%rsp
  4004c8:	48 b8 d0 05 40 00 00 	movabs $0x4005d0,%rax
  4004cf:	00 00 00 
  4004d2:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4004d6:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4004d9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4004dd:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4004e1:	48 89 d7             	mov    %rdx,%rdi
  4004e4:	48 29 c7             	sub    %rax,%rdi
  4004e7:	48 89 f8             	mov    %rdi,%rax
  4004ea:	48 c1 e8 03          	shr    $0x3,%rax
  4004ee:	48 c1 e7 3d          	shl    $0x3d,%rdi
  4004f2:	48 09 f8             	or     %rdi,%rax
  4004f5:	48 83 f8 01          	cmp    $0x1,%rax
  4004f9:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
  4004fd:	76 02                	jbe    400501 <sort+0x41>
  4004ff:	0f 0b                	ud2    
  400501:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400505:	48 63 4d f4          	movslq -0xc(%rbp),%rcx
  400509:	8b 3c 88             	mov    (%rax,%rcx,4),%edi
  40050c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  400510:	8b 55 f4             	mov    -0xc(%rbp),%edx
  400513:	83 c2 01             	add    $0x1,%edx
  400516:	48 63 ca             	movslq %edx,%rcx
  400519:	8b 34 88             	mov    (%rax,%rcx,4),%esi
  40051c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
  400520:	ff d0                	callq  *%rax
  400522:	31 d2                	xor    %edx,%edx
  400524:	89 45 dc             	mov    %eax,-0x24(%rbp)
  400527:	89 d0                	mov    %edx,%eax
  400529:	48 83 c4 30          	add    $0x30,%rsp
  40052d:	5d                   	pop    %rbp
  40052e:	c3                   	retq   
  40052f:	90                   	nop

0000000000400530 <sort2>:
  400530:	55                   	push   %rbp
  400531:	48 89 e5             	mov    %rsp,%rbp
  400534:	48 83 ec 20          	sub    $0x20,%rsp
  400538:	48 b8 d0 05 40 00 00 	movabs $0x4005d0,%rax
  40053f:	00 00 00 
  400542:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400546:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40054a:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40054d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  400551:	8b 75 ec             	mov    -0x14(%rbp),%esi
  400554:	48 89 c2             	mov    %rax,%rdx
  400557:	e8 64 ff ff ff       	callq  4004c0 <sort>
  40055c:	48 ba d8 05 40 00 00 	movabs $0x4005d8,%rdx
  400563:	00 00 00 
  400566:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40056a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  40056d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  400570:	e8 4b ff ff ff       	callq  4004c0 <sort>
  400575:	31 f6                	xor    %esi,%esi
  400577:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40057a:	89 f0                	mov    %esi,%eax
  40057c:	48 83 c4 20          	add    $0x20,%rsp
  400580:	5d                   	pop    %rbp
  400581:	c3                   	retq   
  400582:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400589:	00 00 00 
  40058c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400590 <main>:
  400590:	55                   	push   %rbp
  400591:	48 89 e5             	mov    %rsp,%rbp
  400594:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
  40059b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40059f:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  4005a3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  4005aa:	89 7d f8             	mov    %edi,-0x8(%rbp)
  4005ad:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  4005b1:	8b 55 f8             	mov    -0x8(%rbp),%edx
  4005b4:	48 89 cf             	mov    %rcx,%rdi
  4005b7:	48 89 c6             	mov    %rax,%rsi
  4005ba:	e8 71 ff ff ff       	callq  400530 <sort2>
  4005bf:	31 d2                	xor    %edx,%edx
  4005c1:	89 45 8c             	mov    %eax,-0x74(%rbp)
  4005c4:	89 d0                	mov    %edx,%eax
  4005c6:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
  4005cd:	5d                   	pop    %rbp
  4005ce:	c3                   	retq   
  4005cf:	90                   	nop

00000000004005d0 <lt>:
  4005d0:	e9 ab fe ff ff       	jmpq   400480 <lt.cfi>
  4005d5:	cc                   	int3   
  4005d6:	cc                   	int3   
  4005d7:	cc                   	int3   

00000000004005d8 <gt>:
  4005d8:	e9 c3 fe ff ff       	jmpq   4004a0 <gt.cfi>
  4005dd:	cc                   	int3   
  4005de:	cc                   	int3   
  4005df:	cc                   	int3   

00000000004005e0 <__libc_csu_init>:
  4005e0:	41 57                	push   %r15
  4005e2:	41 56                	push   %r14
  4005e4:	49 89 d7             	mov    %rdx,%r15
  4005e7:	41 55                	push   %r13
  4005e9:	41 54                	push   %r12
  4005eb:	4c 8d 25 5e 08 20 00 	lea    0x20085e(%rip),%r12        # 600e50 <__frame_dummy_init_array_entry>
  4005f2:	55                   	push   %rbp
  4005f3:	48 8d 2d 5e 08 20 00 	lea    0x20085e(%rip),%rbp        # 600e58 <__init_array_end>
  4005fa:	53                   	push   %rbx
  4005fb:	41 89 fd             	mov    %edi,%r13d
  4005fe:	49 89 f6             	mov    %rsi,%r14
  400601:	4c 29 e5             	sub    %r12,%rbp
  400604:	48 83 ec 08          	sub    $0x8,%rsp
  400608:	48 c1 fd 03          	sar    $0x3,%rbp
  40060c:	e8 5f fd ff ff       	callq  400370 <_init>
  400611:	48 85 ed             	test   %rbp,%rbp
  400614:	74 20                	je     400636 <__libc_csu_init+0x56>
  400616:	31 db                	xor    %ebx,%ebx
  400618:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  40061f:	00 
  400620:	4c 89 fa             	mov    %r15,%rdx
  400623:	4c 89 f6             	mov    %r14,%rsi
  400626:	44 89 ef             	mov    %r13d,%edi
  400629:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  40062d:	48 83 c3 01          	add    $0x1,%rbx
  400631:	48 39 dd             	cmp    %rbx,%rbp
  400634:	75 ea                	jne    400620 <__libc_csu_init+0x40>
  400636:	48 83 c4 08          	add    $0x8,%rsp
  40063a:	5b                   	pop    %rbx
  40063b:	5d                   	pop    %rbp
  40063c:	41 5c                	pop    %r12
  40063e:	41 5d                	pop    %r13
  400640:	41 5e                	pop    %r14
  400642:	41 5f                	pop    %r15
  400644:	c3                   	retq   
  400645:	90                   	nop
  400646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40064d:	00 00 00 

0000000000400650 <__libc_csu_fini>:
  400650:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400654 <_fini>:
  400654:	48 83 ec 08          	sub    $0x8,%rsp
  400658:	48 83 c4 08          	add    $0x8,%rsp
  40065c:	c3                   	retq   
