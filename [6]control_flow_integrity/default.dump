
default:     file format elf64-x86-64


Disassembly of section .init:

0000000000400370 <_init>:
  400370:	48 83 ec 08          	sub    $0x8,%rsp
  400374:	48 8b 05 7d 0c 20 00 	mov    0x200c7d(%rip),%rax        # 600ff8 <__gmon_start__>
  40037b:	48 85 c0             	test   %rax,%rax
  40037e:	74 02                	je     400382 <_init+0x12>
  400380:	ff d0                	callq  *%rax
  400382:	48 83 c4 08          	add    $0x8,%rsp
  400386:	c3                   	retq   

Disassembly of section .text:

0000000000400390 <_start>:
  400390:	31 ed                	xor    %ebp,%ebp
  400392:	49 89 d1             	mov    %rdx,%r9
  400395:	5e                   	pop    %rsi
  400396:	48 89 e2             	mov    %rsp,%rdx
  400399:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40039d:	50                   	push   %rax
  40039e:	54                   	push   %rsp
  40039f:	49 c7 c0 20 06 40 00 	mov    $0x400620,%r8
  4003a6:	48 c7 c1 b0 05 40 00 	mov    $0x4005b0,%rcx
  4003ad:	48 c7 c7 70 05 40 00 	mov    $0x400570,%rdi
  4003b4:	ff 15 36 0c 20 00    	callq  *0x200c36(%rip)        # 600ff0 <__libc_start_main@GLIBC_2.2.5>
  4003ba:	f4                   	hlt    
  4003bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000004003c0 <_dl_relocate_static_pie>:
  4003c0:	f3 c3                	repz retq 
  4003c2:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  4003c9:	00 00 00 
  4003cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004003d0 <deregister_tm_clones>:
  4003d0:	55                   	push   %rbp
  4003d1:	b8 28 10 60 00       	mov    $0x601028,%eax
  4003d6:	48 3d 28 10 60 00    	cmp    $0x601028,%rax
  4003dc:	48 89 e5             	mov    %rsp,%rbp
  4003df:	74 17                	je     4003f8 <deregister_tm_clones+0x28>
  4003e1:	b8 00 00 00 00       	mov    $0x0,%eax
  4003e6:	48 85 c0             	test   %rax,%rax
  4003e9:	74 0d                	je     4003f8 <deregister_tm_clones+0x28>
  4003eb:	5d                   	pop    %rbp
  4003ec:	bf 28 10 60 00       	mov    $0x601028,%edi
  4003f1:	ff e0                	jmpq   *%rax
  4003f3:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  4003f8:	5d                   	pop    %rbp
  4003f9:	c3                   	retq   
  4003fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400400 <register_tm_clones>:
  400400:	be 28 10 60 00       	mov    $0x601028,%esi
  400405:	55                   	push   %rbp
  400406:	48 81 ee 28 10 60 00 	sub    $0x601028,%rsi
  40040d:	48 89 e5             	mov    %rsp,%rbp
  400410:	48 c1 fe 03          	sar    $0x3,%rsi
  400414:	48 89 f0             	mov    %rsi,%rax
  400417:	48 c1 e8 3f          	shr    $0x3f,%rax
  40041b:	48 01 c6             	add    %rax,%rsi
  40041e:	48 d1 fe             	sar    %rsi
  400421:	74 15                	je     400438 <register_tm_clones+0x38>
  400423:	b8 00 00 00 00       	mov    $0x0,%eax
  400428:	48 85 c0             	test   %rax,%rax
  40042b:	74 0b                	je     400438 <register_tm_clones+0x38>
  40042d:	5d                   	pop    %rbp
  40042e:	bf 28 10 60 00       	mov    $0x601028,%edi
  400433:	ff e0                	jmpq   *%rax
  400435:	0f 1f 00             	nopl   (%rax)
  400438:	5d                   	pop    %rbp
  400439:	c3                   	retq   
  40043a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400440 <__do_global_dtors_aux>:
  400440:	80 3d e1 0b 20 00 00 	cmpb   $0x0,0x200be1(%rip)        # 601028 <__TMC_END__>
  400447:	75 17                	jne    400460 <__do_global_dtors_aux+0x20>
  400449:	55                   	push   %rbp
  40044a:	48 89 e5             	mov    %rsp,%rbp
  40044d:	e8 7e ff ff ff       	callq  4003d0 <deregister_tm_clones>
  400452:	c6 05 cf 0b 20 00 01 	movb   $0x1,0x200bcf(%rip)        # 601028 <__TMC_END__>
  400459:	5d                   	pop    %rbp
  40045a:	c3                   	retq   
  40045b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
  400460:	f3 c3                	repz retq 
  400462:	0f 1f 40 00          	nopl   0x0(%rax)
  400466:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40046d:	00 00 00 

0000000000400470 <frame_dummy>:
  400470:	55                   	push   %rbp
  400471:	48 89 e5             	mov    %rsp,%rbp
  400474:	5d                   	pop    %rbp
  400475:	eb 89                	jmp    400400 <register_tm_clones>
  400477:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
  40047e:	00 00 

0000000000400480 <lt>:
  400480:	55                   	push   %rbp
  400481:	48 89 e5             	mov    %rsp,%rbp
  400484:	89 7d fc             	mov    %edi,-0x4(%rbp)
  400487:	89 75 f8             	mov    %esi,-0x8(%rbp)
  40048a:	8b 75 fc             	mov    -0x4(%rbp),%esi
  40048d:	3b 75 f8             	cmp    -0x8(%rbp),%esi
  400490:	0f 9c c0             	setl   %al
  400493:	24 01                	and    $0x1,%al
  400495:	0f b6 c0             	movzbl %al,%eax
  400498:	5d                   	pop    %rbp
  400499:	c3                   	retq   
  40049a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004a0 <gt>:
  4004a0:	55                   	push   %rbp
  4004a1:	48 89 e5             	mov    %rsp,%rbp
  4004a4:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4004a7:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4004aa:	8b 75 fc             	mov    -0x4(%rbp),%esi
  4004ad:	3b 75 f8             	cmp    -0x8(%rbp),%esi
  4004b0:	0f 9f c0             	setg   %al
  4004b3:	24 01                	and    $0x1,%al
  4004b5:	0f b6 c0             	movzbl %al,%eax
  4004b8:	5d                   	pop    %rbp
  4004b9:	c3                   	retq   
  4004ba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000004004c0 <sort>:
  4004c0:	55                   	push   %rbp
  4004c1:	48 89 e5             	mov    %rsp,%rbp
  4004c4:	48 83 ec 20          	sub    $0x20,%rsp
  4004c8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  4004cc:	89 75 f4             	mov    %esi,-0xc(%rbp)
  4004cf:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
  4004d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
  4004d7:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  4004db:	48 63 45 f4          	movslq -0xc(%rbp),%rax
  4004df:	8b 3c 87             	mov    (%rdi,%rax,4),%edi
  4004e2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
  4004e6:	8b 75 f4             	mov    -0xc(%rbp),%esi
  4004e9:	83 c6 01             	add    $0x1,%esi
  4004ec:	48 63 ce             	movslq %esi,%rcx
  4004ef:	8b 34 88             	mov    (%rax,%rcx,4),%esi
  4004f2:	ff d2                	callq  *%rdx
  4004f4:	31 f6                	xor    %esi,%esi
  4004f6:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  4004f9:	89 f0                	mov    %esi,%eax
  4004fb:	48 83 c4 20          	add    $0x20,%rsp
  4004ff:	5d                   	pop    %rbp
  400500:	c3                   	retq   
  400501:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  400508:	0f 1f 84 00 00 00 00 
  40050f:	00 

0000000000400510 <sort2>:
  400510:	55                   	push   %rbp
  400511:	48 89 e5             	mov    %rsp,%rbp
  400514:	48 83 ec 20          	sub    $0x20,%rsp
  400518:	48 b8 80 04 40 00 00 	movabs $0x400480,%rax
  40051f:	00 00 00 
  400522:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
  400526:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  40052a:	89 55 ec             	mov    %edx,-0x14(%rbp)
  40052d:	48 8b 7d f8          	mov    -0x8(%rbp),%rdi
  400531:	8b 75 ec             	mov    -0x14(%rbp),%esi
  400534:	48 89 c2             	mov    %rax,%rdx
  400537:	e8 84 ff ff ff       	callq  4004c0 <sort>
  40053c:	48 ba a0 04 40 00 00 	movabs $0x4004a0,%rdx
  400543:	00 00 00 
  400546:	48 8b 7d f0          	mov    -0x10(%rbp),%rdi
  40054a:	8b 75 ec             	mov    -0x14(%rbp),%esi
  40054d:	89 45 e8             	mov    %eax,-0x18(%rbp)
  400550:	e8 6b ff ff ff       	callq  4004c0 <sort>
  400555:	31 f6                	xor    %esi,%esi
  400557:	89 45 e4             	mov    %eax,-0x1c(%rbp)
  40055a:	89 f0                	mov    %esi,%eax
  40055c:	48 83 c4 20          	add    $0x20,%rsp
  400560:	5d                   	pop    %rbp
  400561:	c3                   	retq   
  400562:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 nopw %cs:0x0(%rax,%rax,1)
  400569:	1f 84 00 00 00 00 00 

0000000000400570 <main>:
  400570:	55                   	push   %rbp
  400571:	48 89 e5             	mov    %rsp,%rbp
  400574:	48 81 ec 80 00 00 00 	sub    $0x80,%rsp
  40057b:	48 8d 45 90          	lea    -0x70(%rbp),%rax
  40057f:	48 8d 4d c0          	lea    -0x40(%rbp),%rcx
  400583:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
  40058a:	89 7d f8             	mov    %edi,-0x8(%rbp)
  40058d:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
  400591:	8b 55 f8             	mov    -0x8(%rbp),%edx
  400594:	48 89 cf             	mov    %rcx,%rdi
  400597:	48 89 c6             	mov    %rax,%rsi
  40059a:	e8 71 ff ff ff       	callq  400510 <sort2>
  40059f:	31 d2                	xor    %edx,%edx
  4005a1:	89 45 8c             	mov    %eax,-0x74(%rbp)
  4005a4:	89 d0                	mov    %edx,%eax
  4005a6:	48 81 c4 80 00 00 00 	add    $0x80,%rsp
  4005ad:	5d                   	pop    %rbp
  4005ae:	c3                   	retq   
  4005af:	90                   	nop

00000000004005b0 <__libc_csu_init>:
  4005b0:	41 57                	push   %r15
  4005b2:	41 56                	push   %r14
  4005b4:	49 89 d7             	mov    %rdx,%r15
  4005b7:	41 55                	push   %r13
  4005b9:	41 54                	push   %r12
  4005bb:	4c 8d 25 8e 08 20 00 	lea    0x20088e(%rip),%r12        # 600e50 <__frame_dummy_init_array_entry>
  4005c2:	55                   	push   %rbp
  4005c3:	48 8d 2d 8e 08 20 00 	lea    0x20088e(%rip),%rbp        # 600e58 <__init_array_end>
  4005ca:	53                   	push   %rbx
  4005cb:	41 89 fd             	mov    %edi,%r13d
  4005ce:	49 89 f6             	mov    %rsi,%r14
  4005d1:	4c 29 e5             	sub    %r12,%rbp
  4005d4:	48 83 ec 08          	sub    $0x8,%rsp
  4005d8:	48 c1 fd 03          	sar    $0x3,%rbp
  4005dc:	e8 8f fd ff ff       	callq  400370 <_init>
  4005e1:	48 85 ed             	test   %rbp,%rbp
  4005e4:	74 20                	je     400606 <__libc_csu_init+0x56>
  4005e6:	31 db                	xor    %ebx,%ebx
  4005e8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  4005ef:	00 
  4005f0:	4c 89 fa             	mov    %r15,%rdx
  4005f3:	4c 89 f6             	mov    %r14,%rsi
  4005f6:	44 89 ef             	mov    %r13d,%edi
  4005f9:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  4005fd:	48 83 c3 01          	add    $0x1,%rbx
  400601:	48 39 dd             	cmp    %rbx,%rbp
  400604:	75 ea                	jne    4005f0 <__libc_csu_init+0x40>
  400606:	48 83 c4 08          	add    $0x8,%rsp
  40060a:	5b                   	pop    %rbx
  40060b:	5d                   	pop    %rbp
  40060c:	41 5c                	pop    %r12
  40060e:	41 5d                	pop    %r13
  400610:	41 5e                	pop    %r14
  400612:	41 5f                	pop    %r15
  400614:	c3                   	retq   
  400615:	90                   	nop
  400616:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  40061d:	00 00 00 

0000000000400620 <__libc_csu_fini>:
  400620:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400624 <_fini>:
  400624:	48 83 ec 08          	sub    $0x8,%rsp
  400628:	48 83 c4 08          	add    $0x8,%rsp
  40062c:	c3                   	retq   
